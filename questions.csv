dimension_id,dimension_name,dimension_description,question_id,question_text,question_type,option_1_label,option_1_value,option_2_label,option_2_value,option_3_label,option_3_value,option_4_label,option_4_value,option_5_label,option_5_value,option_6_label,option_6_value,why_matters,when_done_well,problems_without
workflow,WORKFLOW MASTERY,How well does the pod control and optimize their flow of work?,1,The pod tracks workflow KPIs and clearly identifies bottlenecks in their process,A,,,,,,,,,,,,,,"Without metrics you're flying blind. KPIs reveal where work actually gets stuck - often not where teams think. Data beats opinions every time when improving flow.","Decisions based on facts not feelings|Team knows exactly where to focus improvement efforts|Problems visible before they become critical|Continuous flow optimization becomes possible","Optimizing the wrong things wastes effort|Arguments about what's really slowing the team|Hidden wait times kill productivity|Can't prove improvements actually worked"
workflow,WORKFLOW MASTERY,How well does the pod control and optimize their flow of work?,2,How well does the pod manage concurrent work to maintain flow?,C,Chaos - Everyone works on everything constant context switching,1,Overloaded - People juggle many items lots of 90% done work,2,Some awareness - Pod tries to limit WIP but often fails under pressure,3,Usually controlled - Most members focus on 1-2 items occasional overload,4,Well managed - Clear focus items flow smoothly rare bottlenecks,5,Optimized flow - Pod proactively manages WIP pulls work at sustainable pace,6,"Too much WIP creates chaos. Like juggling - add too many balls and you drop them all. Focus enables flow, multitasking destroys it.","Work flows predictably through the system|Team members can focus deeply|Less context switching means higher quality|Faster overall delivery despite doing less at once","Everything is 90% done nothing is finished|Constant context switching burns mental energy|Blocked work piles up everywhere|Stress and overtime become normal"
workflow,WORKFLOW MASTERY,How well does the pod control and optimize their flow of work?,3,"The pod knows and actively works to reduce the time from ""started"" to ""done""",A,,,,,,,,,,,,,,"Cycle time is the truth about your delivery speed. Long cycle times mean late feedback, higher risk, and unhappy stakeholders. Speed isn't rushing - it's removing delays.","Fast feedback loops catch problems early|Value reaches users quickly|Less work in progress reduces complexity|Team morale improves with frequent wins","Requirements change before work finishes|Big batches increase risk of failure|Team forgets context on long-running items|Business loses confidence in delivery"
workflow,WORKFLOW MASTERY,How well does the pod control and optimize their flow of work?,4,Bottlenecks are made visible and the pod actively works to eliminate them,A,,,,,,,,,,,,,,"A chain is only as strong as its weakest link. One bottleneck can slow an entire team. Making them visible turns frustration into focused action.","Everyone knows where help is needed|Resources shift dynamically to unblock flow|Systematic improvements target real constraints|Team collaborates instead of finger-pointing","Work queues up invisibly until crisis hits|People optimize their part while system suffers|Heroics and overtime become the norm|Same problems repeat every sprint"
workflow,WORKFLOW MASTERY,How well does the pod control and optimize their flow of work?,5,Dependencies with other pods (code reviews cross-pod projects) are identified and optimized to avoid delays,A,,,,,,,,,,,,,,"External dependencies are delivery killers. They're outside your control but inside your timeline. Managing them proactively is the difference between smooth delivery and constant fire-fighting.","No surprise blocks from other teams|Clear contracts and timelines with dependencies|Alternative paths identified in advance|Predictable delivery despite external factors","Sprint goals fail due to external delays|Last-minute scrambles to find workarounds|Trust erodes between teams|Planning becomes meaningless"
workflow,WORKFLOW MASTERY,How well does the pod control and optimize their flow of work?,6,The number of items completed per sprint is predictable and stable,A,,,,,,,,,,,,,,"Predictability builds trust. When completion varies wildly, planning becomes guesswork. Stable velocity means reliable commitments and calm delivery.","Business can plan with confidence|Team avoids overcommitment stress|Sustainable pace prevents burnout|Focus on value not just activity","Constant replanning wastes time|Team credibility suffers|Feast or famine work patterns|Quality drops under pressure"
rituals,RITUALS & CADENCE,How effective are the pod's ceremonies and regular practices?,7,Each iteration has a proper preparation (refinement) and planning session,C,No planning sessions,1,Planning exists but poorly prepared,2,Planning exists sometimes prepared,3,Planning exists usually well prepared,4,Planning exists always well prepared,5,Planning refined regularly always excellent,6,"Starting work unprepared is like cooking without reading the recipe first. Good preparation prevents rework, confusion, and wasted effort.","Team starts sprints with clarity and confidence|Questions answered before coding begins|Realistic commitments based on understanding|Smooth sprint execution without surprises","Discovery happens during development|Constant clarification interrupts flow|Scope creep from misunderstandings|Sprint goals regularly missed"
rituals,RITUALS & CADENCE,How effective are the pod's ceremonies and regular practices?,8,Daily check-ins effectively identify blockers and coordinate work,A,,,,,,,,,,,,,,"Blockers grow exponentially - what takes 5 minutes to fix now takes 5 hours tomorrow. Daily sync prevents small issues from becoming big problems.","Blockers resolved within hours not days|Natural collaboration emerges|No duplicate work or gaps|Team stays aligned without micromanagement","People stuck for days before asking for help|Duplicate work from poor coordination|Surprises at sprint review|Increased stress and frustration"
rituals,RITUALS & CADENCE,How effective are the pod's ceremonies and regular practices?,9,The pod demonstrates completed work and tracks delivery metrics each sprint,A,,,,,,,,,,,,,,"'Done' without demonstration is just a claim. Regular demos create accountability, gather feedback, and celebrate progress. Metrics show if you're improving or just busy.","Early feedback prevents wrong direction|Team pride in showing real progress|Stakeholders engaged and informed|Continuous improvement based on data","Big bang reveals with nasty surprises|Disconnection from user needs|No celebration of achievements|Can't tell if process changes help"
rituals,RITUALS & CADENCE,How effective are the pod's ceremonies and regular practices?,10,Product demos conducted with stakeholders this quarter,B,0 demos,1,1 demo,3,2 demos,5,3+ demos,6,,,,,,"Stakeholders aren't mind readers. Regular demos build trust, get buy-in, and ensure you're building the right thing. Silence from stakeholders isn't approval - it's disengagement.","Strong stakeholder support and engagement|Early course corrections save time|Shared excitement about progress|Clear alignment on priorities","Surprise disappointment at major milestones|Building the wrong thing perfectly|Loss of stakeholder confidence|Late expensive changes"
rituals,RITUALS & CADENCE,How effective are the pod's ceremonies and regular practices?,11,Backlog refinement happens regularly and keeps upcoming work ready,A,,,,,,,,,,,,,,"An unrefined backlog is like a cluttered workshop - you waste time looking for tools instead of building. Regular refinement keeps the team moving smoothly.","Sprints start immediately without confusion|Consistent flow without start-stop delays|Better estimates from deeper understanding|Proactive problem solving","Sprint planning takes forever|Work starts then stops for clarification|Poor estimates lead to overruns|Technical debt hidden until too late"
rituals,RITUALS & CADENCE,How effective are the pod's ceremonies and regular practices?,12,The pod has a dedicated ritual for continuous improvement each iteration (retrospective),A,,,,,,,,,,,,,,"Teams that don't reflect don't improve. Retrospectives turn experience into learning and frustration into action. Without them, you repeat the same mistakes forever.","Problems solved systematically not repeatedly|Team owns their process improvements|Psychological safety increases|Continuous evolution and adaptation","Same problems every sprint|Growing frustration and cynicism|Process imposed not owned|Team stagnation and turnover"
rituals,RITUALS & CADENCE,How effective are the pod's ceremonies and regular practices?,13,Pod member attendance at ceremonies,B,Less than 60%,1,60-69%,2,70-79%,3,80-89%,4,90-94%,5,95% or higher,6,"Ceremonies need everyone to work. Missing people means missing perspectives, delayed decisions, and repeated conversations. Presence shows commitment to the team.","Decisions made quickly with all input|Strong team cohesion and alignment|Efficient ceremonies with clear outcomes|Shared ownership of process","Decisions revisited when absentees return|Information gaps and miscommunication|Ceremonies feel wasteful to attendees|Team fragmentation"
rituals,RITUALS & CADENCE,How effective are the pod's ceremonies and regular practices?,14,Pod members find the ceremonies valuable and wouldn't want to skip them,A,,,,,,,,,,,,,,"Ceremonies that feel like waste ARE waste. When done right, ceremonies are where the magic happens - alignment, problem-solving, and team building. If people want to skip them, they're broken.","High energy and engagement|Team protects ceremony time|Continuous improvement of ceremonies themselves|Ceremonies drive real outcomes","Multitasking during ceremonies|Going through motions without value|Resentment about 'wasted' time|Ceremonies happen but nothing changes"
visibility,VISIBILITY & ALIGNMENT,How clear and transparent are goals progress and information?,15,Sprint goals are clear and written by PM/EM,C,No sprint goals defined,1,"""Goal"" is just the list of stories/tasks",2,Multiple goals to cover different priorities,3,Single goal focused on delivery (output),4,Single goal focused on user/business value (outcome),5,Single outcome goal with clear success metric,6,"A sprint without a clear goal is just a list of tasks. Goals create focus, enable trade-offs, and give meaning to the work. Vague goals are worse than no goals.","Everyone knows what success looks like|Easy trade-off decisions during sprint|Sense of achievement when goal is met|Clear communication to stakeholders","Team pulls in different directions|No way to say no to new requests|Sprint review becomes task checklist|Lost sense of purpose"
visibility,VISIBILITY & ALIGNMENT,How clear and transparent are goals progress and information?,16,The pod has clear visibility of the portfolio of initiatives in their quarterly roadmap,A,,,,,,,,,,,,,,"Working without roadmap visibility is like driving with a dirty windshield. Teams need to see where they're going to make smart decisions and prepare for what's coming.","Team makes informed technical decisions|Proactive preparation for upcoming work|Better sprint planning with context|Increased ownership and engagement","Short-sighted technical choices|Surprises that could have been prepared for|Disengaged team just taking orders|Wasted effort on soon-to-be-replaced work"
visibility,VISIBILITY & ALIGNMENT,How clear and transparent are goals progress and information?,17,The functional and technical source of truth is clearly identified and kept up-to-date by the pod,A,,,,,,,,,,,,,,"Outdated documentation is worse than no documentation - it misleads confidently. A single source of truth prevents the chaos of conflicting information and tribal knowledge.","Onboarding new members takes days not months|Decisions based on correct information|Less time searching more time building|Knowledge preserved despite turnover","Constant questions about how things work|Decisions based on outdated information|New team members struggle for months|Critical knowledge walks out the door"
visibility,VISIBILITY & ALIGNMENT,How clear and transparent are goals progress and information?,18,Sprint progress and blockers are visible to all pod members and stakeholders (Kanban board Up to date),A,,,,,,,,,,,,,,"Invisible progress creates anxiety and micromanagement. Transparency builds trust and enables help to arrive before it's too late.","No status meeting needed|Help arrives proactively|Trust replaces surveillance|Early warning of problems","Constant status requests|Surprises at sprint end|Micromanagement increases|Problems hidden until crisis"
visibility,VISIBILITY & ALIGNMENT,How clear and transparent are goals progress and information?,19,Regular clear communication keeps stakeholders informed of progress and challenges,A,,,,,,,,,,,,,,"Silence breeds anxiety and assumptions. Regular communication builds confidence even when news is bad. Stakeholders can handle problems but hate surprises.","Stakeholders become advocates not obstacles|Problems get executive support early|Realistic expectations throughout|Celebration of achievements","Stakeholder frustration and intervention|Lost political support when needed|Unrealistic pressure from misunderstandings|Success goes unnoticed"
visibility,VISIBILITY & ALIGNMENT,How clear and transparent are goals progress and information?,20,Decisions are documented and communicated clearly,C,No decision documentation,1,Some decisions documented,2,Important decisions usually documented,3,Most decisions documented,4,All decisions documented,5,All decisions documented with context and rationale,6,"Undocumented decisions get relitigated endlessly. 'Why did we do it this way?' becomes a time sink. Clear decision records prevent groundhog day discussions.","No repeated discussions of same topic|New members understand context quickly|Decisions stick and move forward|Learning from past choices","Same debates every few months|Decisions mysteriously reverse|New people challenge everything|No learning from history"
visibility,VISIBILITY & ALIGNMENT,How clear and transparent are goals progress and information?,21,How visible and trackable is all the pod's work?,C,Invisible work - No idea who works on what lots of surprise tasks,1,Scattered - Some work in Jira some in slack some nowhere,2,Partially visible - Main work tracked but side tasks are hidden,3,Mostly visible - Most work is tracked occasional invisible tasks,4,Fully transparent - All work visible everyone knows where to look,5,Optimized visibility - Real-time view of all work with clear status,6,"Invisible work can't be managed, celebrated, or improved. When work hides in private lists or mental queues, chaos follows. Visibility enables everything else.","Clear picture of all work in progress|Easy to spot overload and bottlenecks|Fair distribution of effort|Accurate planning and forecasting","Surprise work appears from nowhere|Some people overloaded others idle|Can't explain why things take so long|Planning based on fiction"
visibility,VISIBILITY & ALIGNMENT,How clear and transparent are goals progress and information?,22,The pod clearly understands the priority and rationale behind work items,A,,,,,,,,,,,,,,"Working without understanding why is soul-crushing. When teams know the 'why', they make better decisions, find better solutions, and care more about outcomes.","Team makes good autonomous decisions|Creative solutions to real problems|Higher engagement and ownership|Push back on low-value work","Blind execution misses the point|No innovation or improvement|Disengaged order-takers|Building wrong solutions perfectly"
visibility,VISIBILITY & ALIGNMENT,How clear and transparent are goals progress and information?,23,Critical knowledge is documented and shared not held by individuals,A,,,,,,,,,,,,,,"Bus factor of one is a time bomb. When critical knowledge lives in one head, vacation becomes crisis and resignation becomes catastrophe.","No single points of failure|People can take vacations peacefully|Knowledge sharing becomes culture|Team resilience to change","Hero culture creates burnout|Critical people can't be promoted|Knowledge walks out the door|Single points of failure everywhere"
execution,EXECUTION QUALITY,How well does the pod deliver on commitments with quality?,24,How ready is work when the pod starts it?,C,Not ready - Immediately blocked can't even begin,1,Barely ready - Start but quickly blocked on basics,2,Somewhat ready - Can start but need significant clarifications,3,Mostly ready - Good to start minor clarifications needed,4,Well ready - Everything clear rare questions during work,5,Perfectly ready - Crystal clear zero blocks from start to done,6,"Starting unready work is like beginning a journey without a map. You'll get somewhere, but probably not where you intended, and it'll take twice as long.","Smooth flow from start to finish|No mid-work surprises or pivots|Predictable delivery times|Higher quality outcomes","Constant stops for clarification|Rework from misunderstandings|Frustrated developers and stakeholders|Unpredictable delivery"
execution,EXECUTION QUALITY,How well does the pod deliver on commitments with quality?,25,When work is marked 'done' how complete is it really?,C,Done = coded - Always needs testing review documentation,1,Done = works on my machine - Often breaks in other environments,2,Done = technically complete - Functional but missing polish documentation,3,Done = mostly shippable - Small tweaks needed before release,4,Done = ready to ship - Could go to production immediately,5,Done = in production creating value - Deployed monitored validated by users,6,"'Done' that isn't really done creates hidden work and destroys trust. True done means no surprises, no follow-up work, and no technical debt.","Work genuinely complete first time|No surprise follow-up tasks|Trust between team and stakeholders|Predictable capacity planning","'Done' work comes back repeatedly|Hidden work destroys planning|Stakeholder trust erodes|Technical debt accumulates"
execution,EXECUTION QUALITY,How well does the pod deliver on commitments with quality?,26,Sprint commitment completion rate,B,Less than 50%,1,50-59%,2,60-69%,3,70-79%,4,80-89%,5,90% or higher,6,"Commitment isn't just a number - it's a promise. Consistently meeting commitments builds trust, confidence, and predictability. Missing them erodes everything.","Stakeholder confidence in delivery|Team pride and motivation|Predictable planning and roadmaps|Sustainable pace","Erosion of trust and credibility|Pressure and overtime to catch up|Demotivated team|Unreliable planning"
execution,EXECUTION QUALITY,How well does the pod deliver on commitments with quality?,27,Test execution is owned by the entire pod to avoid bottlenecks in the workflow,A,,,,,,,,,,,,,,"Testing isn't someone's job, it's everyone's responsibility. When testing becomes a bottleneck, quality suffers and delivery slows. Shared ownership accelerates flow.","Testing happens continuously not at end|No bottleneck waiting for testers|Higher quality through many eyes|Shared understanding of quality","Testing bottleneck delays everything|Developers throw code over wall|Quality problems found too late|Adversarial dev vs test relationship"
execution,EXECUTION QUALITY,How well does the pod deliver on commitments with quality?,28,Quality checks are built into the process and prevent defects from moving forward,A,,,,,,,,,,,,,,"Finding bugs in production is like finding typos after printing 10,000 books. Quality gates catch problems when they're cheap to fix, not expensive to apologize for.","Defects caught early when cheap|Confidence in releases|Less firefighting and hotfixes|Protected reputation","Production fires and emergency fixes|Customer trust erosion|Expensive rework and patches|Team burnout from constant crisis"
execution,EXECUTION QUALITY,How well does the pod deliver on commitments with quality?,29,"Defect rate after work is marked ""done""",B,Many defects found regularly,1,Frequent defects found,2,Some defects found occasionally,3,Few defects found,4,Very few defects found,5,Rare or no defects found,6,"Defects after 'done' mean it wasn't really done. They disrupt future work, erode trust, and cost 10x more to fix than catching them early.","Clean handoffs to next stage|Trust in team's work quality|Focus on new work not fixes|Happy customers and stakeholders","Constant interrupt-driven bug fixes|Future work delayed by past problems|Reputation for poor quality|Customer dissatisfaction"
execution,EXECUTION QUALITY,How well does the pod deliver on commitments with quality?,30,Frequency of rework due to misunderstandings or quality issues,B,Rework happens frequently,1,Rework happens often,2,Rework happens sometimes,3,Rework happens occasionally,4,Rework happens rarely,5,Rework almost never happens,6,"Rework is pure waste - you're paying twice for the same value. It destroys morale, wastes time, and indicates broken communication or quality processes.","First time right becomes the norm|Time spent on new value not fixes|Team morale and pride high|Predictable delivery","Constantly redoing 'completed' work|Demoralized team|Unpredictable capacity|Stakeholder frustration"
improvement,CONTINUOUS IMPROVEMENT,How well does the pod learn and evolve their practices?,31,Improvements implemented in how the pod works together this quarter,B,0 improvements,1,1-2 improvements,3,3-4 improvements,5,5+ improvements,6,,,,,,"Teams that don't evolve get left behind. Regular improvements compound - small changes add up to transformation. Standing still is moving backward.","Team continuously gets better|Problems solved not endured|High engagement in process ownership|Competitive advantage through evolution","Same problems quarter after quarter|Team frustration grows|Lost talent to better teams|Falling behind industry practices"
improvement,CONTINUOUS IMPROVEMENT,How well does the pod learn and evolve their practices?,32,Do retrospective actions lead to real improvements?,C,Actions lost - Identified but forgotten immediately,1,Actions logged nothing happens - Written somewhere never done,2,Few actions completed - Some effort but little change,3,Some improvements implemented - Visible progress on key items,4,Most improvements delivered - Real changes each sprint,5,Continuous improvement culture - Improvements + measurement of impact,6,"Actions without follow-through are just wishes. When retrospective actions don't create change, teams lose faith in the process and stop trying to improve.","Visible changes from team input|Growing belief in ability to improve|Proactive problem solving|Continuous evolution","Cynicism about retrospectives|Same issues discussed repeatedly|Learned helplessness|Process theater without value"
improvement,CONTINUOUS IMPROVEMENT,How well does the pod learn and evolve their practices?,33,The pod regularly tries new practices and techniques,A,,,,,,,,,,,,,,"Innovation requires experimentation. Teams that don't try new things slowly become obsolete. Safe-to-fail experiments drive breakthrough improvements.","Cutting edge practices adopted early|Culture of innovation and learning|Competitive advantage through innovation|Engaged and excited team","Stagnation and obsolescence|Missing out on better ways|Bored and disengaged team|Falling behind competition"
improvement,CONTINUOUS IMPROVEMENT,How well does the pod learn and evolve their practices?,34,Problems and failures are analyzed for root causes and learning (post-mortem),A,,,,,,,,,,,,,,"Failures are expensive teachers - waste the lesson and you'll pay for it again. Root cause analysis turns failure into wisdom and prevents repeat performances.","Problems solved once permanently|Failures become learning opportunities|Blame-free culture of improvement|Increasing resilience","Same failures repeatedly|Blame culture prevents honesty|No learning from mistakes|Increasing fragility"
improvement,CONTINUOUS IMPROVEMENT,How well does the pod learn and evolve their practices?,35,Fast feedback loops exist at multiple levels (code product process),A,,,,,,,,,,,,,,"Slow feedback is expensive feedback. The longer between action and result, the more waste when you're wrong. Fast feedback enables rapid correction and learning.","Mistakes caught in minutes not months|Rapid iteration and improvement|Lower cost of change|Higher quality outcomes","Building the wrong thing for months|Expensive late-stage changes|Slow learning and adaptation|Quality problems compound"
improvement,CONTINUOUS IMPROVEMENT,How well does the pod learn and evolve their practices?,36,Improvements and their impacts are celebrated and shared,A,,,,,,,,,,,,,,"Uncelebrated improvements die quietly. Recognition fuels more improvement, sharing spreads benefits, and celebration builds culture. Success needs spotlights.","Improvement becomes cultural norm|Knowledge spreads across organization|Team pride and motivation high|Positive reinforcement cycle","Improvements forgotten and abandoned|Lessons learned stay local|Team feels unappreciated|Innovation dies from neglect"
